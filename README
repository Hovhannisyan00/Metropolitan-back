Metropolitan Museum of Art API Project
This project leverages the Metropolitan Museum of Art Collection API to enable users to search for and explore artworks from the museum's vast collection, spanning over 470,000 artworks across 19 departments.

Features
Department Search: Users can select a department from the museum’s collection, such as "Ancient Near Eastern Art" or "Egyptian Art".
Artwork Search: Users can search for artworks by title or keyword within a specific department.
Display Results: The application displays the first 10 search results with the artwork’s title.
API Endpoints Used
List Departments
Endpoint: GET https://collectionapi.metmuseum.org/public/collection/v1/departments
Provides a list of departments available in the museum’s collection.
Search for Artworks
Endpoint: GET https://collectionapi.metmuseum.org/public/collection/v1/search?q={searchTerm}
Allows searching for objects by title or keyword.
Fetch Artwork Details
Endpoint: GET https://collectionapi.metmuseum.org/public/collection/v1/objects/{objectID}
Retrieves specific details of an artwork using its unique object ID.
Setup and Usage
Clone the repository.
Install dependencies (if applicable).
Run the application.
Access the API documentation to understand the endpoints better: Metropolitan Museum of Art API Documentation.
Example Use Case
To test the search functionality, try searching for "cylinder" in the "Ancient Near Eastern Art" department. The application will display the first 10 matching results with their titles.

Shopping Mall API
This is a REST API for managing a list of products in a shopping mall database. It allows creating, reading, updating, and deleting products. Each product is associated with a single category, which includes a title and description.

Features
Products CRUD: Perform basic operations (Create, Read, Update, Delete) for products.
Categories: Predefined test data for categories, with no separate CRUD required.
Product Details: Each product has a unique SKU, belongs to one category, and can be fetched along with its associated category.
Database Schema
Category
title (string): Title of the category.
description (string): Description of the category.
Product
title (string): Title of the product.
description (string): Description of the product.
SKU (string): Unique alphanumeric identifier of exactly 8 characters.
price (decimal): Price of the product.
categoryId (reference): Foreign key referencing the category.

Requirements
SKU Validation: SKU must be unique and exactly 8 characters long.

Setup
Clone the repository:

bash/zsh
Copy code
git clone https://github.com/your-username/shopping-mall-api.git
Install dependencies:

bash/zsh
Copy code
npm install
Database Setup: Configure the database connection in your .env file.

Run the application:

bash/zsh
Copy code
npm start
Test the API: You can test the API using tools like Postman or curl.

Run the application:

bash/zsh
Copy code
npm run start:dev
Test the API: You can test the API using tools like Postman or curl.

